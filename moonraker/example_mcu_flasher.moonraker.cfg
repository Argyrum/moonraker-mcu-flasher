[update_manager mcu_flasher]
type: git_repo
path: ~/moonraker-mcu-flasher
origin: https://github.com/juliapythoncpp/moonraker-mcu-flasher.git
is_system_service: False
managed_services: klipper moonraker

# MCU FLASHER CONFIG
[mcu_flasher linux]
kconfig:
  CONFIG_LOW_LEVEL_OPTIONS=y
  CONFIG_MACH_LINUX=y
flash_cmd: 
  make flash

[mcu_flasher m8p]
kconfig:
  CONFIG_LOW_LEVEL_OPTIONS=y
  CONFIG_MACH_STM32=y
  CONFIG_MACH_STM32G0B1=y
  CONFIG_STM32_CLOCK_REF_8M=y
  CONFIG_STM32_USBCANBUS_PA11_PA12=y
  CONFIG_STM32_CMENU_CANBUS_PD12_PD13=y
  CONFIG_STM32_CANBUS_PD12_PD13=y
  CONFIG_USBCANBUS=y
  CONFIG_CANBUS=y
  CONFIG_CANBUS_FREQUENCY=1000000
flash_cmd:
  python3 ~/katapult/scripts/flashtool.py -u 90fb324a78ed -r # Reset m8p to bootloader, remember to change to your uuid
  sleep 1
  python3 ~/katapult/scripts/flashtool.py -f ~/klipper/out/klipper.bin -d /dev/serial/by-id/usb-katapult_stm32g0b1xx_4300360009504B4633373520-if00 # Remember to change to your serial id

[mcu_flasher ebb36]
kconfig:
  CONFIG_LOW_LEVEL_OPTIONS=y
  CONFIG_MACH_STM32=y
  CONFIG_FLASH_BOOT_ADDRESS=0x8000000
  CONFIG_MACH_STM32G0B1=y
  CONFIG_STM32_CLOCK_REF_8M=y
  CONFIG_STM32_MMENU_CANBUS_PB0_PB1=y
  CONFIG_STM32_CANBUS_PB0_PB1=y
  CONFIG_CANBUS_FREQUENCY=1000000
  CONFIG_CANSERIAL=y
  CONFIG_CANBUS=y
  CONFIG_CANBUS_FILTER=y
flash_cmd: 
  python3 ~/katapult/scripts/flashtool.py -i can0 -f ~/klipper/out/klipper.bin -u e3e8e93f53df # Remember to change to your uuid


# Demo with bootloader update (SKR3 + USB Katapult)
#
# WARNING: Ensure you have alternative methods of flashing the bootloader (Ex: external programmer) in case you misconfig the katapult entry and lock yourself out of klipper.
#          It is recommended that you try to flash katapult deployer.bin and then klipper.bin manually at least once to understand the process.
#
# NOTE: Not tested with canbus
#
# 1 - The _katapult entry must never be used standalone, as the deployer.bin will wipe klipper from the mcu. This will prevent klippy from reconnecting and lock the user out of using moonraker through the web interface (Mainsail, etc).
#     Use 'FLASH_MCU mcu=all' so that it will flash deployer bin and then flash klipper on top again (and ensure that the _katapult entry is above the klipper one so it flashes in the correct order).
#
# 2 - If using only USB-katapult, use the device path or the hardware path for specifying flashtool.py -d. This is because the id path changes (usb-<Katapult/Klipper>-<MCU model>-<identifier>).
#
# 3 - Since USB Katapult does not support entering the bootloader automatically, after calling 'FLASH_MCU mcu=all' you will need to manually enter the bootloader by double pressing the reset button or any other method you specified in katapult's menuconfig.

[mcu_flasher skr3_katapult]
make_path: /home/<user>/katapult # Use absolute path.
kconfig:
  # Add your katapult menuconfig options here (MUST build the katapult deployer version).
  # If ommited <katapult path/.config will be used (run make menuconfig at least once to generate it).
flash_cmd:
  python3 ~/katapult/scripts/flashtool.py -f ~/katapult/out/deployer.bin -d /dev/ttyACM0 # Change to your device or hardware path.
  sleep 1 # Give katapult time before you flash klipper.
silent: False #True # Suppress all standard output messages.

[mcu_flasher skr3]
kconfig:
  # Add your klipper menuconfig options here.
  # If ommited <klipper path/.config will be used (run make menuconfig at least once to generate it).
flash_cmd:
  python3 ~/katapult/scripts/flashtool.py -d /dev/ttyACM0  # Change to your device or hardware path.
silent: False #True # Suppress all standard output messages.
